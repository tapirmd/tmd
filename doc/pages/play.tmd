
### TapirMD Playground

This is a playground for the __TapirMD``index.html__ markup format.
For learning and reference, please visit
__demos``demos.html__,
__use cases``use-cases.html__, and
__the specification``specification.html__.

@@@ #note-enable-js
%%(Note: This page needs JavaScript to function.)

*  ### Edit
   """ html
<textarea id="tmd-source" rows="22" style="width: 100%; border: 1px solid #c7923c; background: #fddaa1;"></textarea>
   """

*  @@@ #effect-tab
   ### Render Effect
   @@@ #render-effect
   {
   }

*  @@@ #html-tab
   ### Result HTML
   @@@ #result-html .tmd-auto-wrap
   '''
   '''


""" html
<script>
let tmdLibInstance = undefined;
let lastTmdText = "";

document.addEventListener("DOMContentLoaded", function() {
	initTmdLib().then(instance => {
		tmdLibInstance = instance;
		console.log("TMD lib (v" + instance.version() + ") inited.");

		document.getElementById("note-enable-js").style.display = 'none';

		const effectLabel = document.getElementById("effect-tab");
		const effectRatio = effectLabel.previousElementSibling;
		effectRatio.addEventListener('change', (event) => {
			if (event.target.checked) {
				tmdToHTML();
			}
		});

		const htmlLabel = document.getElementById("html-tab");
		const htmlRatio = htmlLabel.previousElementSibling;
		htmlRatio.addEventListener('change', (event) => {
			if (event.target.checked) {
				tmdToHTML();
			}
		});
	}).catch(err => {
		console.log("TMD lib init error:", err);
		const inputTextArea = document.getElementById('tmd-source');
		inputTextArea.value = "(TMD lib init error.)";
	});
});

function setRenderEffect(output, isHTML) {
	const effectDiv = document.getElementById("render-effect");
	const htmlPre = document.getElementById("result-html");
	if (isHTML) {
		effectDiv.innerHTML = output;
		htmlPre.textContent = output;
	} else {
		effectDiv.textContent = output;
		htmlPre.textContent = "";
	}
}

function tmdToHTML() {
	if (!tmdLibInstance) {
		//console.log("wasm is not initialized yet");
		setRenderEffect("TmdLib is not initialized yet", false);
		return;
	}

	try {
		// set input TMD
		const inputTextArea = document.getElementById('tmd-source');
		const tmdText = inputTextArea.value;
		if (tmdText == lastTmdText) {
			//console.log("no change");
			return;
		}
		tmdLibInstance.setInputTmd(tmdText)

		// format TMD
		const formattedText = tmdLibInstance.format();
		if (formattedText != null) {
			inputTextArea.value = formattedText;
		}

		// generate HTML
		const html = tmdLibInstance.generateHtml({autoIdentSuffix: "__---demo"});
		setRenderEffect(html, true);
	
		lastTmdText = tmdText;
	} catch (err) {
		console.log("TMD lib gen error:", err);
		setRenderEffect("(TMD lib gen error.)", false);
	}
}

// inline js lib

[js-lib-file]

</script>
"""
